circle_table <- exp_cat_pheno
#View(circle_table)
new_table <- circle_table[,1:2]
library(data.table)
test = setDT(new_table)[, .N, by = c(names(new_table))]
library(circlize)
# Make the circular plot
df1 = test
library(reshape)
mat1 = reshape(df1, idvar = "end", timevar = "start", direction = "wide")
mat1 = as.data.frame(mat1)
rownames(mat1) = c(mat1$end)
colnames(mat1) = gsub(".*\\.","", colnames(mat1))
mat1=mat1[,2:ncol(mat1)]
circle_table <- pheno_cat_exp
#View(circle_table)
new_table <- circle_table[,1:2]
library(data.table)
test = setDT(new_table)[, .N, by = c(names(new_table))]
library(circlize)
# Make the circular plot
df2 = test
library(reshape)
mat2 = reshape(df2, idvar = "end", timevar = "start", direction = "wide")
mat2 = as.data.frame(mat2)
rownames(mat2) = c(mat2$end)
colnames(mat2) = gsub(".*\\.","", colnames(mat2))
mat2=mat2[,2:ncol(mat2)]
mat1 = as.matrix.data.frame(mat1)
mat2 = as.matrix.data.frame(mat2)
mat = matrix(0, nrow = 60, ncol = 21)
rownames(mat) = c(rownames(mat1), rownames(mat2))
colnames(mat) = c(colnames(mat1), colnames(mat2))
mat[rownames(mat1), colnames(mat1)] = mat1
mat[rownames(mat2), colnames(mat2)] = mat2
mat
mat=t(mat)
nm = unique(unlist(dimnames(mat)))
group = structure(c(rep("Exposure",9),rep("Phenotype",12),rep("Cat",60)), names = nm)
group
grid.col = structure(c(rep(2, 9), rep(3, 12), rep(6, 60)),
                     names = nm)
#chordDiagram(mat, group = group, grid.col = grid.col)
library(viridis)
#mycolor <- viridis(97, alpha = 1, begin = 0, end = 1, option = "D")
#mycolor <- mycolor[sample(1:97)]
chordDiagram(mat, 
             grid.col = grid.col, 
             group = group,
             transparency = 0.25,
             annotationTrack = c("grid"),
             preAllocateTracks = list(track.height = max(strwidth(unlist(dimnames(df1))))), 
             big.gap = 20, 
             small.gap = 3)
circos.track(track.index = 1, panel.fun = function(x, y) {
  circos.text(cex=0.75,CELL_META$xcenter, CELL_META$ylim[1], CELL_META$sector.index, 
              facing = "clockwise", niceFacing = TRUE, adj = c(0, 0.5))
}, bg.border = NA) # here set bg.border to NA is important
circos.clear()
########################
# I am not familiar with following code for legend. Just borrowed from the Internet.
# You need to save the final plot as 25 in x 25 in.
# Add legend
library(grid)
library(gridBase)
library(ComplexHeatmap)
Category = structure(c(rep("Exposure",1),rep("Phenotype",1),rep("Association",1)))
grid.col = structure(c(rep(2, 1), rep(3, 1), rep(6, 1)), names= c("Exposure","Phenotype","Association"))
lgd_col = Legend(
  labels = Category,                 
  title = "Category",                 
  type = "point",                 
  background = unique(grid.col))
pd = packLegend(lgd_col,direction = "horizontal")
circle_size = unit(25, "in")
draw(pd, x = circle_size, just = c("right", "top"))
pushViewport(viewport(x = 10, y = 10, width = grobWidth(as.vector(lgd_col)), height = grobHeight(as.vector(lgd_col)), just = c("right", "top")))
grid.draw(lgd_col)
upViewport()
